version: "3.7"

services:
    proxy:
        image: nginx:alpine
        container_name: proxy
        ports:
            - "${PROXY_PORT:-8033}:8033"
        volumes:
            - ./docker/nginx.conf:/etc/nginx/nginx.conf
        restart: "unless-stopped"
        networks:
            - backend

    server:
        build:
            context: ./
            dockerfile: docker/Dockerfile.local
        container_name: web-server
        ports:
            - "${APP_PORT:-3000}:3000"
        volumes:
            - ./:/app
            - /app/node_modules
        restart: "unless-stopped"
        networks:
            - backend
        depends_on:
            - mysql

    mysql:
        image: "mysql:8.0"
        container_name: mysql
        environment:
            MYSQL_ROOT_PASSWORD: "${TYPEORM_PASSWORD}"
            MYSQL_DATABASE: "${TYPEORM_DATABASE}"
            MYSQL_USER: "${TYPEORM_USERNAME}"
            MYSQL_PASSWORD: "${TYPEORM_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        networks:
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin", "ping"]

networks:
    backend:
        driver: bridge

volumes:
    data:
        driver: local
